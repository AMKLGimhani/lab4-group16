trigger:
- main  # Trigger pipeline on commits to main branch

pool:
  vmImage: 'ubuntu-latest'  # Use Ubuntu build agent

variables:
  acrLoginServer: 'group16acr.azurecr.io'
  imageRepository: 'lab4-group16'
  tag: '$(Build.BuildId)'
  webAppName: 'Webappgrp16'

steps:
# Build and push Docker image
- script: |
    # Login to ACR
    echo $(acrPassword) | docker login $(acrLoginServer) -u $(acrUsername) --password-stdin
    
    # Build the docker image
    docker build -t $(acrLoginServer)/$(imageRepository):$(tag) .
    
    # Push to ACR
    docker push $(acrLoginServer)/$(imageRepository):$(tag)
  displayName: 'Build and push Docker image'

# Deploy using direct API calls to Kudu
- script: |
    # Setup container config
    CONTAINER_SETTINGS='{
      "properties": {
        "linuxFxVersion": "DOCKER|$(acrLoginServer)/$(imageRepository):$(tag)",
        "appCommandLine": "",
        "appSettings": [
          {
            "name": "DOCKER_REGISTRY_SERVER_URL",
            "value": "https://$(acrLoginServer)"
          },
          {
            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
            "value": "$(acrUsername)"
          },
          {
            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
            "value": "$(acrPassword)"
          }
        ]
      }
    }'
    
    # Encode credentials for Basic Auth
    AUTH=$(echo -n "$(publishProfileUsername):$(publishProfilePassword)" | base64)
    
    # Update container settings via Kudu API
    curl -X PUT \
      "https://webappgrp16-cwdqddeqesapa6eq.scm.northeurope-01.azurewebsites.net/api/settings" \
      -H "Authorization: Basic $AUTH" \
      -H "Content-Type: application/json" \
      -d "$CONTAINER_SETTINGS"
      
    # Restart the app
    curl -X POST \
      "https://webappgrp16-cwdqddeqesapa6eq.scm.northeurope-01.azurewebsites.net/api/restart" \
      -H "Authorization: Basic $AUTH"
  displayName: 'Deploy to Azure Web App using Kudu API'